{"version":3,"sources":["components/DarkModeSwitcher/DarkModeSwitcher.js","components/DarkModeSwitcher/index.js","assets/images/Mehdibha.js","components/Navbar/Logo.js","components/Navbar/LangSelector.js","components/Navbar/Menu.js","components/Navbar/MobileMenu.js","components/Navbar/HamburgerIcon.js","components/Navbar/Navbar.js","components/Navbar/index.js"],"names":["DarkModeSwitcher","onClose","useContext","ThemeContext","isDarkMode","setIsDarkMode","t","useTranslation","FormControlLabel","control","Switch","checked","name","color","onChange","label","useStyles","makeStyles","theme","logo","animation","palette","primary","main","Logo","props","classes","className","root","cursor","setHomeIsActive","rest","spy","smooth","duration","offset","to","onSetActive","onSetInactive","Mehdibha","languages","code","country_code","profileMenu","backgroundColor","marginTop","boxShadow","shadows","menuItem","backgroundSecondary","flagIcon","marginRight","spacing","LangSelector","useState","anchorEl","setAnchorEl","handleClose","i18n","changeLanguage","currentLanguage","find","elem","Button","variant","onClick","e","currentTarget","KeyboardArrowDownSharp","style","id","open","Boolean","keepMounted","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","disableScrollLock","MenuItem","smoothScrollProps","AnimatedLink","React","forwardRef","ref","motion","div","custom","animate","wrapper","display","alignItems","tabs","navMenuItem","StyledTab","withStyles","transition","minWidth","text","Tab","disableRipple","StyledTabs","indicator","maxWidth","Tabs","TabIndicatorProps","children","Menu","homeIsActive","value","setValue","isScrolling","setIsScrolling","isLoading","LoaderContext","controls","useAnimation","useEffect","Events","scrollEvent","register","element","start","opacity","y","i","delay","spyHandleChange","index","indicatorColor","textColor","event","newValue","component","MuiLink","href","underline","marginLeft","drawer","background","default","list","width","fullList","listItem","justifyContent","padding","btnContainer","active","MobileMenu","onOpen","listItemProps","button","Link","onKeyDown","activeClass","Drawer","anchor","paper","role","List","ListItem","Divider","container","overflow","flexDirection","line","height","secondary","line1","marginBottom","line2","line3","HamburgerIcon","isOpen","variants","initial","rotate","x","navbar","toolbar","isMobile","Navbar","useMediaQuery","loaderContext","useTheme","scroll","setScroll","mobileNavIsOpen","setMobileNavIsOpen","window","addEventListener","scrollY","appbarVariants","scrolled","navbarHeight","type","stiffness","damping","AppBar","position","Toolbar","Hidden","smDown","mdUp"],"mappings":"gMA4BeA,EAvBU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,EAAsCC,qBAAWC,KAAzCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cACZC,EAAMC,cAAND,EACR,OACI,cAACE,EAAA,EAAD,CACIC,QACI,cAACC,EAAA,EAAD,CACIC,QAASP,EACTQ,KAAK,kBACLC,MAAM,UACNC,SAAU,WACFb,GACAA,IAEJI,GAAeD,MAI3BW,MAAOT,EAAE,gBCrBNN,O,yKCSTgB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,UAAU,6BAEd,0BAA2B,CACvB,KAAM,CAAEP,MAAOK,EAAMG,QAAQC,QAAQC,MACrC,MAAO,CAAEV,MAAOK,EAAMG,QAAQC,QAAQC,MACtC,MAAO,CAAEV,MAAO,aAChB,MAAO,CAAEA,MAAO,aAChB,OAAQ,CAAEA,MAAOK,EAAMG,QAAQC,QAAQC,WAKhCC,EAvBF,SAACC,GAEV,IAAMC,EAAUV,IAEhB,OAAQ,qBAAKW,UAAWD,EAAQP,KAAxB,gB,sBCiBNH,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCU,KAAM,CACFC,OAAQ,eAIDL,EAxBF,SAAC,GAAkC,IAAhCM,EAA+B,EAA/BA,gBAAoBC,EAAW,iBACrCL,EAAUV,IAChB,OACI,cAAC,OAAD,CACIgB,KAAG,EACHC,QAAM,EACNC,SAAU,IACVC,QAAS,GACTC,GAAG,OACHC,YAAa,kBAAMP,GAAgB,IACnCQ,cAAe,kBAAMR,GAAgB,IACrCH,UAAWD,EAAQE,KARvB,SAUI,cAACW,EAAD,eAAcR,O,wFCXpBS,G,OAAY,CACd,CACIC,KAAM,KACN7B,KAAM,KACN8B,aAAc,MAElB,CACID,KAAM,KACN7B,KAAM,KACN8B,aAAc,QA6DhB1B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyB,YAAa,CACT,mBAAoB,CAChBC,gBAAiB1B,EAAMG,QAAQC,QAAQC,KACvCsB,UAAW,MACXC,UAAW5B,EAAM6B,QAAQ,KAGjCC,SAAU,CACN,UAAW,CACPJ,gBAAiB1B,EAAM+B,sBAG/BC,SAAU,CACNC,YAAajC,EAAMkC,QAAQ,QAIpBC,EA3EM,SAAC5B,GAClB,IAAMC,EAAUV,IACRV,EAAMC,cAAND,EACR,EAAgCgD,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAc,SAAChB,GACjBiB,IAAKC,eAAelB,GACpBe,EAAY,MACR/B,EAAMxB,SACNwB,EAAMxB,WAIR2D,EAAkBpB,EAAUqB,MAAK,SAACC,GAAD,OAAUA,EAAKrB,OAASnC,EAAE,eAEjE,OACI,gDAASmB,GAAT,cACI,eAACsC,EAAA,EAAD,CAAQC,QAAQ,YAAYnD,MAAM,UAAUoD,QAAS,SAACC,GAAD,OAAOV,EAAYU,EAAEC,gBAA1E,UACKP,GACG,qCACI,sBAAMjC,UAAS,8BAAyBiC,EAAgBlB,aAAzC,YAAyDhB,EAAQwB,YAC/EU,EAAgBhD,QAGzB,cAACwD,EAAA,EAAD,CAAwBC,MAAO,CAAExD,MAAO,cAE5C,eAAC,IAAD,CACIyD,GAAG,eACHf,SAAUA,EACVgB,KAAMC,QAAQjB,GACdtD,QAAS,kBAAMuD,EAAY,OAC3BiB,aAAW,EACXC,UAAW,EACXC,mBAAoB,KACpBC,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAEhBnD,UAAWD,EAAQiB,YACnBqC,mBAAiB,EAjBrB,UAmBI,eAACC,EAAA,EAAD,CAAUtD,UAAWD,EAAQsB,SAAUiB,QAAS,kBAAMR,EAAY,OAAlE,UACI,sBAAM9B,UAAS,iCAA4BD,EAAQwB,YADvD,QAIA,eAAC+B,EAAA,EAAD,CAAUtD,UAAWD,EAAQsB,SAAUiB,QAAS,kBAAMR,EAAY,OAAlE,UACI,sBAAM9B,UAAS,iCAA4BD,EAAQwB,YADvD,gB,QC5DVgC,EAAoB,CACtBlD,KAAK,EACLC,QAAQ,EACRE,QAAS,GACTD,SAAU,KAGRiD,EAAeC,IAAMC,YAAW,SAAC5D,EAAO6D,GAAR,OAClC,cAACC,EAAA,EAAOC,IAAR,CAAYF,IAAKA,EAAKG,OAAQhE,EAAMgE,OAAQC,QAASjE,EAAMiE,QAA3D,SACI,cAAC,OAAD,2BAAUR,GAAuBzD,SAgHnCT,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyE,QAAS,CACLC,QAAS,OACTC,WAAY,UAEhBC,KAAM,CACF3C,YAAajC,EAAMkC,QAAQ,IAE/B2C,YAAa,CACT5C,YAAajC,EAAMkC,QAAQ,QAI7B4C,EAAYC,aAAW,SAAC/E,GAAD,MAAY,CACrCU,KAAM,CACFsE,WAAY,MACZC,SAAU,IACV,UAAW,CACPtF,MAAOK,EAAMG,QAAQ+E,KAAK9E,aALpB2E,EAQd,SAACxE,GAAD,OAAW,cAAC4E,EAAA,EAAD,aAAKC,eAAa,GAAK7E,OAEhC8E,EAAaN,YAAW,CAC1BO,UAAW,CACP,WAAY,CACRC,SAAU,MAHHR,EAMhB,SAACxE,GAAD,OAAW,cAACiF,EAAA,EAAD,2BAAUjF,GAAV,IAAiBuC,QAAQ,YAAY2C,kBAAmB,CAAEC,SAAU,gCAEnEC,EA3IF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACLpF,EAAUV,IAChB,EAA0BsC,oBAAS,GAAnC,mBAAOyD,EAAP,KAAcC,EAAd,KACA,EAAsC1D,oBAAS,GAA/C,mBAAO2D,EAAP,KAAoBC,EAApB,KACQC,EAAcjH,qBAAWkH,KAAzBD,UACFE,EAAWC,cACThH,EAAMC,cAAND,EAERiH,qBAAU,WACNC,SAAOC,YAAYC,SAAS,SAAS,SAACtF,EAAIuF,GACtCT,GAAe,MAGnBM,SAAOC,YAAYC,SAAS,OAAO,SAACtF,EAAIuF,GACpCT,GAAe,SAIvBK,qBAAU,WACDJ,EAODE,EAASO,MAAM,CAAEC,QAAS,EAAGC,GAAI,IANjCT,EAASO,OAAM,SAACG,GAAD,MAAQ,CACnBD,EAAG,EACHD,QAAS,EACT3B,WAAY,CAAE8B,MAAW,GAAJD,EAAU,UAKxC,CAACZ,EAAWE,IAEf,IAIMY,EAAkB,SAACC,GAChBjB,GACDD,EAASkB,IAUjB,OANAX,qBAAU,WACFT,GACAE,GAAS,KAEd,CAACF,IAGA,sBAAKnF,UAAWD,EAAQiE,QAAxB,UACI,eAACY,EAAD,CACI5E,UAAWD,EAAQoE,KACnBiB,MAAOA,EACPoB,eAAe,UACfC,UAAU,UACVtH,SAvBS,SAACuH,EAAOC,GACzBtB,EAASsB,IAuBD,aAAW,wBANf,UAQI,cAACtC,EAAD,CACIuC,UAAWpD,EACXM,OAAQ,EACRC,QAAS2B,EACTjF,GAAG,QACHrB,MAAOT,EAAE,cACT+B,YAAa,kBAAM4F,EAAgB,IACnC3F,cAAe,kBAAI2F,GAAgB,MAEvC,cAACjC,EAAD,CACIuC,UAAWpD,EACXO,QAAS2B,EACT5B,OAAQ,EACRrD,GAAG,aACHrB,MAAOT,EAAE,mBACT+B,YAAa,kBAAM4F,EAAgB,MAEvC,cAACjC,EAAD,CACIuC,UAAWpD,EACXO,QAAS2B,EACT5B,OAAQ,EACRrD,GAAG,WACHrB,MAAOT,EAAE,iBACT+B,YAAa,kBAAM4F,EAAgB,MAEvC,cAACjC,EAAD,CACIuC,UAAWpD,EACXO,QAAS2B,EACT5B,OAAQ,EACRrD,GAAG,UACHrB,MAAOT,EAAE,gBACT+B,YAAa,kBAAM4F,EAAgB,SAG3C,cAAC1C,EAAA,EAAOC,IAAR,CAAYC,OAAQ,EAAGC,QAAS2B,EAAhC,SACI,cAACtD,EAAA,EAAD,CACIwE,UAAWC,IACXC,KAAK,cACLzE,QAAQ,WACRnD,MAAM,UACN6H,UAAU,OALd,SAOKpI,EAAE,mBAGX,cAACiF,EAAA,EAAOC,IAAR,CAAYC,OAAQ,EAAGC,QAAS2B,EAAhC,SACI,cAAC,EAAD,CAAchD,MAAO,CAAEsE,WAAY,gB,6CC5D7C3H,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrC0H,OAAQ,CACJhG,gBAAiB1B,EAAMG,QAAQwH,WAAWC,SAE9CC,KAAM,CACFC,MAAO,KAEXC,SAAU,CACND,MAAO,OACPnG,UAAW3B,EAAMkC,QAAQ,IAE7B8F,SAAU,CACNtD,QAAS,OACTuD,eAAgB,SAChBC,QAASlI,EAAMkC,QAAQ,EAAG,GAC1B,UAAW,CACPR,gBAAiB,kBAGzByG,aAAc,CACVzD,QAAS,OACTuD,eAAgB,SAChBtG,UAAW3B,EAAMkC,QAAQ,IAE7BkG,OAAQ,CACJ1G,gBAAiB1B,EAAMG,QAAQC,QAAQC,UAIhCgI,EArFI,SAAC,GAA+B,IAA7BhF,EAA4B,EAA5BA,KAAMtE,EAAsB,EAAtBA,QAClByB,GADwC,EAAb8H,OACjBxI,KACRV,EAAMC,cAAND,EACFmJ,EAAgB,CAClBC,QAAQ,EACRnB,UAAWoB,OACX1F,QAAShE,EACT2J,UAAW3J,EACX+B,KAAK,EACLC,QAAQ,EACRE,OAAQ,EACRD,SAAU,IACVP,UAAWD,EAAQwH,SACnBW,YAAanI,EAAQ4H,QAGzB,OACI,cAACQ,EAAA,EAAD,CAAQC,OAAO,OAAOxF,KAAMA,EAAMtE,QAASA,EAASyB,QAAS,CAAEsI,MAAOtI,EAAQkH,QAA9E,SACI,qBAAKjH,UAAWD,EAAQqH,KAAMkB,KAAK,eAAnC,SACI,eAACC,EAAA,EAAD,CAAMvI,UAAWD,EAAQuH,SAAzB,UACI,cAACkB,EAAA,EAAD,2BAAcV,GAAd,IAA6BrH,GAAG,QAAhC,SACK9B,EAAE,iBAEP,cAAC6J,EAAA,EAAD,2BAAcV,GAAd,IAA6BrH,GAAG,aAAhC,SACK9B,EAAE,sBAEP,cAAC6J,EAAA,EAAD,2BAAcV,GAAd,IAA6BrH,GAAG,WAAhC,SACK9B,EAAE,oBAEP,cAAC6J,EAAA,EAAD,2BAAcV,GAAd,IAA6BrH,GAAG,UAAhC,SACK9B,EAAE,mBAEP,cAAC6J,EAAA,EAAD,CAAUxI,UAAWD,EAAQ2H,aAA7B,SACI,cAACtF,EAAA,EAAD,CACIwE,UAAWC,IACXC,KAAK,cACLzE,QAAQ,WACRnD,MAAM,UACN6H,UAAU,OALd,SAOKpI,EAAE,mBAGX,cAAC6J,EAAA,EAAD,CAAUxI,UAAWD,EAAQ2H,aAA7B,SACI,cAAC,EAAD,CAAcpJ,QAASA,MAE3B,cAACkK,EAAA,EAAD,CAAUxI,UAAWD,EAAQ2H,aAA7B,SACI,cAACrJ,EAAA,EAAD,CAAkBC,QAASA,MAE/B,cAACmK,EAAA,EAAD,Y,aCjCdpJ,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCmJ,UAAW,CACPC,SAAS,SACT1E,QAAQ,OACR2E,cAAc,SACd1E,WAAW,WACXhE,OAAO,UACPuH,QAAQ,OAEZoB,KAAM,CACFC,OAAQ,MACR7H,gBAAiB1B,EAAMG,QAAQ+E,KAAKsE,WAExCC,MAAO,CACH3B,MAAO,OACP4B,aAAc,OAElBC,MAAO,CACH7B,MAAO,OACP4B,aAAc,OAElBE,MAAO,CACH9B,MAAO,YAIA+B,EA7CO,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,OAAUjJ,EAAU,iBAClCsF,EAAWC,cACX5F,EAAUV,IAQhB,OAPAuG,qBAAU,WACFyD,EACA3D,EAASO,MAAM,WAEfP,EAASO,MAAM,aAEpB,CAACoD,EAAO3D,IAEP,eAAC9B,EAAA,EAAOC,IAAR,yBAAY7D,UAAWD,EAAQ2I,WAAetI,GAA9C,cACI,cAACwD,EAAA,EAAOC,IAAR,CAAY7D,UAAS,UAAKD,EAAQ8I,KAAb,YAAqB9I,EAAQiJ,OAASM,SAAU,CAACC,QAAQ,CAACC,OAAO,EAAErD,EAAE,GAAIpC,QAAQ,CAACyF,OAAO,GAAGrD,EAAE,IAAKpC,QAAS2B,IACjI,cAAC9B,EAAA,EAAOC,IAAR,CAAY7D,UAAS,UAAKD,EAAQ8I,KAAb,YAAqB9I,EAAQmJ,OAASI,SAAU,CAACC,QAAQ,CAACE,EAAE,EAAEvD,QAAQ,GAAInC,QAAQ,CAAC0F,EAAE,IAAIvD,QAAQ,IAAKnC,QAAS2B,IACpI,cAAC9B,EAAA,EAAOC,IAAR,CAAY7D,UAAS,UAAKD,EAAQ8I,KAAb,YAAqB9I,EAAQoJ,OAASG,SAAU,CAACC,QAAQ,CAACC,OAAO,EAAErD,EAAE,GAAIpC,QAAQ,CAACyF,QAAQ,GAAGrD,GAAG,IAAKpC,QAAS2B,SC4DzIrG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF6H,MAAO,SAEXqC,OAAQ,CACJzI,gBAAiB1B,EAAMG,QAAQwH,WAAWC,SAE9CwC,QAAS,CACLnC,eAAgB,gBAChBtD,WAAW,SACXuD,QAAS,SAAC3H,GAAD,OAAYA,EAAM8J,SAAWrK,EAAMkC,QAAQ,EAAG,GAAKlC,EAAMkC,QAAQ,EAAG,SAItEoI,GAnFA,WACX,MAAsClI,oBAAS,GAA/C,mBAAOwD,EAAP,KAAqBhF,EAArB,KACMyJ,EAAWE,YAAc,qBACvBtE,EAAcjH,qBAAWwL,KAAzBvE,UACFE,EAAWC,cACXpG,EAAQyK,cACd,EAA4BrI,oBAAS,GAArC,mBAAOsI,EAAP,KAAeC,EAAf,KACA,EAA8CvI,oBAAS,GAAvD,mBAAOwI,EAAP,KAAwBC,EAAxB,KACMrK,EAAUV,EAAU,CAAE4K,SAAQL,aAEpCS,OAAOC,iBAAiB,UADN,kBAAMJ,EAAUG,OAAOE,QAAU,OAGnD,IAAMC,EAAiB,CACnBjB,QAAS,CAAET,OAAQc,EAAW,GAAK,IAAKzI,UAAW5B,EAAM6B,QAAQ,IACjEqJ,SAAU,CAAE3B,OAAQvJ,EAAMmL,aAAcvJ,UAAW5B,EAAM6B,QAAQ,MAmBrE,OAhBAwE,qBAAU,WACDJ,EAWDE,EAASO,MAAM,CAAEE,GAAI,MAVrBT,EAASO,MAAM,CACXE,EAAG,EACH5B,WAAY,CACR8B,MAAO,IACPsE,KAAM,SACNC,UAAW,IACXC,QAAS,QAMtB,CAACrF,EAAWE,IAGX,eAAC9B,EAAA,EAAOC,IAAR,CACIE,QAAS2B,EADb,UAGI,cAACoF,EAAA,EAAD,CAAQC,SAAS,QAAQhI,UAAW,EAAG/C,UAAWD,EAAQ2J,OAAQ9C,UAAU,MAA5E,SACI,eAACoE,EAAA,EAAD,CACIhL,UAAWD,EAAQ4J,QACnB/C,UAAWhD,IAAOC,IAClByF,SAAUkB,EACVzG,QAASkG,EAAS,WAAa,UAC/B1F,WAAY,CACRoG,KAAM,SACNC,UAAW,IACXC,QAAS,IARjB,UAWI,cAAC,EAAD,CAAM7K,UAAWD,EAAQP,KAAMW,gBAAiBA,IAChD,cAAC8K,EAAA,EAAD,CAAQC,QAAM,EAAd,SACI,cAAC,EAAD,CAAM/F,aAAcA,MAExB,cAAC8F,EAAA,EAAD,CAAQE,MAAI,EAAZ,SACI,cAAC,EAAD,CAAe9B,OAAQc,EAAiB7H,QAAS,kBAAM8H,GAAoBD,aAIvF,cAACc,EAAA,EAAD,CAAQE,MAAI,EAAZ,SACI,cAAC,EAAD,CACIvI,KAAMuH,EACN7L,QAAS,kBAAM8L,GAAmB,IAClCvC,OAAQ,kBAAMuC,GAAmB,YCtEtCP","file":"static/js/12.1382bca6.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Switch, FormControlLabel } from \"@material-ui/core\";\r\nimport ThemeContext from \"../../contexts/themeContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst DarkModeSwitcher = ({ onClose }) => {\r\n    const { isDarkMode, setIsDarkMode } = useContext(ThemeContext);\r\n    const { t } = useTranslation()\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n                <Switch\r\n                    checked={isDarkMode}\r\n                    name=\"checkedDarkMode\"\r\n                    color=\"primary\"\r\n                    onChange={() => {\r\n                        if (onClose) {\r\n                            onClose();\r\n                        }\r\n                        setIsDarkMode(!isDarkMode);\r\n                    }}\r\n                />\r\n            }\r\n            label={t('dark_mode')}\r\n        />\r\n    );\r\n};\r\n\r\nexport default DarkModeSwitcher;\r\n","import DarkModeSwitcher from \"./DarkModeSwitcher\";\r\n\r\nexport default DarkModeSwitcher","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst Logo = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (<div className={classes.logo}>\r\n        |\r\n    </div>);\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    logo: {\r\n        animation: `$blinkingText 3s infinite`,\r\n    },\r\n    \"@keyframes blinkingText\": {\r\n        \"0%\": { color: theme.palette.primary.main },\r\n        \"49%\": { color: theme.palette.primary.main },\r\n        \"60%\": { color: '#ff404000' },\r\n        \"99%\": { color: '#ff404000' },\r\n        \"100%\": { color: theme.palette.primary.main },\r\n    },\r\n}));\r\n\r\n\r\nexport default Logo;\r\n\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Link } from \"react-scroll\";\r\nimport Mehdibha from \"../../assets/images/Mehdibha\";\r\n\r\nconst Logo = ({ setHomeIsActive, ...rest }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Link\r\n            spy\r\n            smooth\r\n            duration={500}\r\n            offset={-70}\r\n            to=\"home\"\r\n            onSetActive={() => setHomeIsActive(true)}\r\n            onSetInactive={() => setHomeIsActive(false)}\r\n            className={classes.root}\r\n        >\r\n            <Mehdibha {...rest} />\r\n        </Link>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        cursor: \"pointer\",\r\n    },\r\n}));\r\n\r\nexport default Logo;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, Menu, MenuItem, Button } from \"@material-ui/core\";\r\nimport { KeyboardArrowDownSharp } from \"@material-ui/icons\";\r\nimport i18n from \"i18next\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"flag-icon-css/css/flag-icon.min.css\";\r\n\r\nconst languages = [\r\n    {\r\n        code: \"es\",\r\n        name: \"ES\",\r\n        country_code: \"es\",\r\n    },\r\n    {\r\n        code: \"en\",\r\n        name: \"EN\",\r\n        country_code: \"gb\",\r\n    },\r\n];\r\n\r\nconst LangSelector = (props) => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClose = (code) => {\r\n        i18n.changeLanguage(code);\r\n        setAnchorEl(null);\r\n        if (props.onClose) {\r\n            props.onClose();\r\n        }\r\n    };\r\n\r\n    const currentLanguage = languages.find((elem) => elem.code === t(\"language\"));\r\n\r\n    return (\r\n        <div {...props}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={(e) => setAnchorEl(e.currentTarget)}>\r\n                {currentLanguage && (\r\n                    <>\r\n                        <span className={`flag-icon flag-icon-${currentLanguage.country_code} ${classes.flagIcon}`} />\r\n                        {currentLanguage.name}\r\n                    </>\r\n                )}\r\n                <KeyboardArrowDownSharp style={{ color: \"white\" }} />\r\n            </Button>\r\n            <Menu\r\n                id=\"profile-menu\"\r\n                anchorEl={anchorEl}\r\n                open={Boolean(anchorEl)}\r\n                onClose={() => setAnchorEl(null)}\r\n                keepMounted\r\n                elevation={0}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"center\",\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"center\",\r\n                }}\r\n                className={classes.profileMenu}\r\n                disableScrollLock\r\n            >\r\n                <MenuItem className={classes.menuItem} onClick={() => handleClose(\"en\")}>\r\n                    <span className={`flag-icon flag-icon-gb ${classes.flagIcon}`} />\r\n                    EN\r\n                </MenuItem>\r\n                <MenuItem className={classes.menuItem} onClick={() => handleClose(\"es\")}>\r\n                    <span className={`flag-icon flag-icon-es ${classes.flagIcon}`} />\r\n                    ES\r\n                </MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    profileMenu: {\r\n        \"& .MuiPaper-root\": {\r\n            backgroundColor: theme.palette.primary.main,\r\n            marginTop: \"2px\",\r\n            boxShadow: theme.shadows[4],\r\n        },\r\n    },\r\n    menuItem: {\r\n        \"&:hover\": {\r\n            backgroundColor: theme.backgroundSecondary,\r\n        },\r\n    },\r\n    flagIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default LangSelector;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Tab, Tabs, Button, makeStyles, withStyles, Link as MuiLink } from \"@material-ui/core\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\nimport { Link, Events } from \"react-scroll\";\r\nimport LangSelector from \"./LangSelector\";\r\nimport LoaderContext from \"../../contexts/loaderContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst smoothScrollProps = {\r\n    spy: true,\r\n    smooth: true,\r\n    offset: -70,\r\n    duration: 500,\r\n};\r\n\r\nconst AnimatedLink = React.forwardRef((props, ref) => (\r\n    <motion.div ref={ref} custom={props.custom} animate={props.animate}>\r\n        <Link {...smoothScrollProps} {...props} />\r\n    </motion.div>\r\n));\r\n\r\nconst Menu = ({homeIsActive}) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(false);\r\n    const [isScrolling, setIsScrolling] = useState(false);\r\n    const { isLoading } = useContext(LoaderContext);\r\n    const controls = useAnimation();\r\n    const { t } = useTranslation()\r\n\r\n    useEffect(() => {\r\n        Events.scrollEvent.register(\"begin\", (to, element) => {\r\n            setIsScrolling(true);\r\n        });\r\n\r\n        Events.scrollEvent.register(\"end\", (to, element) => {\r\n            setIsScrolling(false);\r\n        });\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            controls.start((i) => ({\r\n                y: 0,\r\n                opacity: 1,\r\n                transition: { delay: i * 0.1 + 0.3 },\r\n            }));\r\n        } else {\r\n            controls.start({ opacity: 0, y: -5 });\r\n        }\r\n    }, [isLoading, controls]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const spyHandleChange = (index) => {\r\n        if (!isScrolling) {\r\n            setValue(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (homeIsActive){\r\n            setValue(false)\r\n        }\r\n    }, [homeIsActive])\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <StyledTabs\r\n                className={classes.tabs}\r\n                value={value}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                onChange={handleChange}\r\n                aria-label=\"disabled tabs example\"\r\n            >\r\n                <StyledTab\r\n                    component={AnimatedLink}\r\n                    custom={0}\r\n                    animate={controls}\r\n                    to=\"about\"\r\n                    label={t('menu_about')}\r\n                    onSetActive={() => spyHandleChange(0)}\r\n                    onSetInactive={()=>spyHandleChange(false)}\r\n                />\r\n                <StyledTab\r\n                    component={AnimatedLink}\r\n                    animate={controls}\r\n                    custom={1}\r\n                    to=\"experience\"\r\n                    label={t('menu_experience')}\r\n                    onSetActive={() => spyHandleChange(1)}\r\n                />\r\n                <StyledTab\r\n                    component={AnimatedLink}\r\n                    animate={controls}\r\n                    custom={2}\r\n                    to=\"projects\"\r\n                    label={t('menu_projects')}\r\n                    onSetActive={() => spyHandleChange(2)}\r\n                />\r\n                <StyledTab\r\n                    component={AnimatedLink}\r\n                    animate={controls}\r\n                    custom={3}\r\n                    to=\"contact\"\r\n                    label={t('menu_contact')}\r\n                    onSetActive={() => spyHandleChange(3)}\r\n                />\r\n            </StyledTabs>\r\n            <motion.div custom={4} animate={controls}>\r\n                <Button\r\n                    component={MuiLink}\r\n                    href=\"/resume.pdf\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    underline=\"none\"\r\n                >\r\n                    {t('menu_resume')}\r\n                </Button>\r\n            </motion.div>\r\n            <motion.div custom={5} animate={controls}>\r\n                <LangSelector style={{ marginLeft: \"32px\" }} />\r\n            </motion.div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    tabs: {\r\n        marginRight: theme.spacing(4),\r\n    },\r\n    navMenuItem: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n    root: {\r\n        transition: \".2s\",\r\n        minWidth: 120,\r\n        \"&:hover\": {\r\n            color: theme.palette.text.primary,\r\n        },\r\n    },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst StyledTabs = withStyles({\r\n    indicator: {\r\n        \"& > span\": {\r\n            maxWidth: 20,\r\n        },\r\n    },\r\n})((props) => <Tabs {...props} variant=\"fullWidth\" TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { makeStyles, Drawer, List, Button, Divider, ListItem, Link as MuiLink } from \"@material-ui/core\";\r\nimport { Link } from \"react-scroll\";\r\nimport DarkModeSwitcher from \"../DarkModeSwitcher\";\r\nimport LangSelector from \"./LangSelector\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst MobileMenu = ({ open, onClose, onOpen }) => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const listItemProps = {\r\n        button: true,\r\n        component: Link,\r\n        onClick: onClose,\r\n        onKeyDown: onClose,\r\n        spy: true,\r\n        smooth: true,\r\n        offset: 0,\r\n        duration: 500,\r\n        className: classes.listItem,\r\n        activeClass: classes.active,\r\n    };\r\n\r\n    return (\r\n        <Drawer anchor=\"left\" open={open} onClose={onClose} classes={{ paper: classes.drawer }}>\r\n            <div className={classes.list} role=\"presentation\">\r\n                <List className={classes.fullList}>\r\n                    <ListItem {...listItemProps} to=\"about\">\r\n                        {t('menu_about')}\r\n                    </ListItem>\r\n                    <ListItem {...listItemProps} to=\"experience\">\r\n                        {t('menu_experience')}\r\n                    </ListItem>\r\n                    <ListItem {...listItemProps} to=\"projects\">\r\n                        {t('menu_projects')}\r\n                    </ListItem>\r\n                    <ListItem {...listItemProps} to=\"contact\">\r\n                        {t('menu_contact')}\r\n                    </ListItem>\r\n                    <ListItem className={classes.btnContainer}>\r\n                        <Button\r\n                            component={MuiLink}\r\n                            href=\"/resume.pdf\"\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            underline=\"none\"\r\n                            >\r\n                            {t('menu_resume')}\r\n                        </Button>\r\n                    </ListItem>\r\n                    <ListItem className={classes.btnContainer}>\r\n                        <LangSelector onClose={onClose} />\r\n                    </ListItem>\r\n                    <ListItem className={classes.btnContainer}>\r\n                        <DarkModeSwitcher onClose={onClose} />\r\n                    </ListItem>\r\n                    <Divider />\r\n                </List>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: \"auto\",\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    listItem: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        padding: theme.spacing(2, 0),\r\n        \"&:hover\": {\r\n            backgroundColor: \"rgb(80,80,80)\",\r\n        },\r\n    },\r\n    btnContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    active: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nexport default MobileMenu;\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\n\r\nconst HamburgerIcon = ({isOpen,...rest}) => {\r\n    const controls = useAnimation()\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            controls.start(\"animate\")\r\n        } else {\r\n            controls.start(\"initial\")\r\n        }\r\n    }, [isOpen,controls]);\r\n    return (\r\n        <motion.div className={classes.container} {...rest}>\r\n            <motion.div className={`${classes.line} ${classes.line1}`} variants={{initial:{rotate:0,y:0}, animate:{rotate:45,y:9}}} animate={controls}></motion.div>\r\n            <motion.div className={`${classes.line} ${classes.line2}`} variants={{initial:{x:0,opacity:1}, animate:{x:250,opacity:0}}} animate={controls}></motion.div>\r\n            <motion.div className={`${classes.line} ${classes.line3}`} variants={{initial:{rotate:0,y:0}, animate:{rotate:-45,y:-9}}} animate={controls}></motion.div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        overflow:'hidden',\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        alignItems:\"flex-end\",\r\n        cursor:\"pointer\",\r\n        padding:\"2px\"\r\n    },\r\n    line: {\r\n        height: \"3px\",\r\n        backgroundColor: theme.palette.text.secondary,\r\n    },\r\n    line1: {\r\n        width: \"35px\",\r\n        marginBottom: \"7px\",\r\n    },\r\n    line2: {\r\n        width: \"25px\",\r\n        marginBottom: \"7px\",\r\n    },\r\n    line3: {\r\n        width: \"35px\",\r\n    },\r\n}));\r\n\r\nexport default HamburgerIcon;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { makeStyles, useTheme, useMediaQuery, AppBar, Toolbar, Hidden } from \"@material-ui/core\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\nimport Logo from \"./Logo\";\r\nimport Menu from \"./Menu\";\r\nimport MobileMenu from \"./MobileMenu\";\r\nimport HamburgerIcon from \"./HamburgerIcon\";\r\nimport loaderContext from \"../../contexts/loaderContext\";\r\n\r\nconst Navbar = () => {\r\n    const [homeIsActive, setHomeIsActive]=useState(true)\r\n    const isMobile = useMediaQuery(\"(max-width:700px)\");\r\n    const { isLoading } = useContext(loaderContext);\r\n    const controls = useAnimation();\r\n    const theme = useTheme();\r\n    const [scroll, setScroll] = useState(false);\r\n    const [mobileNavIsOpen, setMobileNavIsOpen] = useState(false);\r\n    const classes = useStyles({ scroll, isMobile });\r\n    const handleNav = () => setScroll(window.scrollY > 30);\r\n    window.addEventListener(\"scroll\", handleNav);\r\n\r\n    const appbarVariants = {\r\n        initial: { height: isMobile ? 70 : 100, boxShadow: theme.shadows[0] },\r\n        scrolled: { height: theme.navbarHeight, boxShadow: theme.shadows[10] },\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            controls.start({\r\n                y: 0,\r\n                transition: {\r\n                    delay: 0.05,\r\n                    type: \"spring\",\r\n                    stiffness: 260,\r\n                    damping: 20,\r\n                },\r\n            });\r\n        } else {\r\n            controls.start({ y: -100 });\r\n        }\r\n    }, [isLoading, controls]);\r\n\r\n    return (\r\n        <motion.div\r\n            animate={controls}\r\n        >\r\n            <AppBar position=\"fixed\" elevation={0} className={classes.navbar} component=\"nav\">\r\n                <Toolbar\r\n                    className={classes.toolbar}\r\n                    component={motion.div}\r\n                    variants={appbarVariants}\r\n                    animate={scroll ? \"scrolled\" : \"initial\"}\r\n                    transition={{\r\n                        type: \"spring\",\r\n                        stiffness: 260,\r\n                        damping: 20,\r\n                    }}\r\n                >\r\n                    <Logo className={classes.logo} setHomeIsActive={setHomeIsActive} />\r\n                    <Hidden smDown>\r\n                        <Menu homeIsActive={homeIsActive} />\r\n                    </Hidden>\r\n                    <Hidden mdUp>\r\n                        <HamburgerIcon isOpen={mobileNavIsOpen} onClick={() => setMobileNavIsOpen(!mobileNavIsOpen)} />\r\n                    </Hidden>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Hidden mdUp>\r\n                <MobileMenu\r\n                    open={mobileNavIsOpen}\r\n                    onClose={() => setMobileNavIsOpen(false)}\r\n                    onOpen={() => setMobileNavIsOpen(true)}\r\n                />\r\n            </Hidden>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    logo: {\r\n        width: \"150px\",\r\n    },\r\n    navbar: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    toolbar: {\r\n        justifyContent: \"space-between\",\r\n        alignItems:\"center\",\r\n        padding: (props) => (props.isMobile ? theme.spacing(0, 2) : theme.spacing(0, 6)),\r\n    },\r\n}));\r\n\r\nexport default Navbar;\r\n","import Navbar from \"./Navbar\";\r\nexport default Navbar;\r\n"],"sourceRoot":""}